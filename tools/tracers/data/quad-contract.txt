Running time is 87.69% contracts
36287/41380 ms


BY CONTRACT

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  9281/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g100 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 49 3 1295 10)
  3759 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  2964 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  3393/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) any/c) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) (recursive-contract g169 #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g147 #:flat) (recursive-contract g155 #:flat) (recursive-contract g167 #:flat)) #:flat)) @ #(struct:srcloc wrap.rkt 36 3 1146 13)
  1606 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  1552 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  3147/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 14 2 165 4)
  2991/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g122 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 51 3 1377 9)
  1460 ms

(-> (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))) @ #(struct:srcloc wrap.rkt 46 3 1812 15)
  2863/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) any/c (or/c #f #t)) @ #(struct:srcloc wrap.rkt 51 3 1980 14)
  930 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat) Symbol) @ #(struct:srcloc utils.rkt 48 3 1262 9)
  893 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  1689/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) (cons/c piece (cons/c (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 41 3 1544 5)
  808 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) String) @ #(struct:srcloc wrap.rkt 37 3 1237 12)
  1489/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g103 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat)) any/c) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g103 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g125 #:flat)) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g116 #:flat) (recursive-contract g107 #:flat) (recursive-contract g130 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 57 3 1577 13)
  708 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  498 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) any/c (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) (recursive-contract g169 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat)) @ #(struct:srcloc wrap.rkt 102 2 4028 13)
  963/2 ms

(-> any/c (vectorof Any) Void) @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm-struct-adapted.rkt 29 3 507 20)
  921/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) (cons/c line (cons/c (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 42 3 1627 4)
  695/2 ms

(vectorof Natural) @ #(struct:srcloc ocm.rkt 140 62 6023 84)
  627/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat)) @ #(struct:srcloc wrap.rkt 34 3 1078 10)
  591/2 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 21 2 350 10)
  284 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 16 2 259 12)
  278 ms

(-> (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)))) (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 80 3 3081 18)
  477/2 ms

(-> $ocm? (vectorof Any) any) @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm-struct.rkt 14 8 259 4)
  230 ms

(->* ((cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat))))) (any/c) (cons/c line (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 39 3 1460 4)
  439/2 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))) @ #(struct:srcloc wrap.rkt 93 2 3645 10)
  423/2 ms

(->* ((listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat))) (any/c) (listof (cons/c line (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat)))))) @ #(struct:srcloc quad-main.rkt 37 3 1335 9)
  203 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 26 2 317 11)
  379/2 ms

(-> any/c (vectorof Any)) @ #(struct:srcloc ocm-struct-adapted.rkt #f #f #f 0)
  381/2 ms

(->* ((listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))) (Float) (listof (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat)))))) @ #(struct:srcloc wrap.rkt 6 2 66 9)
  367/2 ms

(->* ((cons/c line (cons/c (recursive-contract (listof (recursive-contract g448 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))))) ((or/c Float #f)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 5 2 59 4)
  327/2 ms

(-> (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))) @ #(struct:srcloc quad-main.rkt 27 3 815 15)
  165 ms

(-> $ocm? (vectorof Any)) @ #(struct:srcloc ocm-struct.rkt 14 8 259 4)
  162 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) any/c (listof (listof (or/c #f (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 111 2 4445 6)
  156 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))) @ #(struct:srcloc quad-main.rkt 81 3 3129 10)
  160 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g354 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g363 #:flat) (recursive-contract g375 #:flat))) #:flat)) any/c) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g354 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g363 #:flat) (recursive-contract g375 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g358 #:flat)) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g356 #:flat)) #:flat) (recursive-contract g367 #:flat) (recursive-contract (listof (recursive-contract g359 #:flat)) #:flat)) #:flat)) @ #(struct:srcloc render.rkt 39 3 1466 13)
  143 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)))) @ #(struct:srcloc quads.rkt 23 2 277 10)
  133 ms

(->* ((or/c (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat)) any/c) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g187 #:flat)) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g195 #:flat) (recursive-contract (listof (recursive-contract g194 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g188 #:flat)) #:flat)) #:flat)) @ #(struct:srcloc quad-main.rkt 26 3 728 13)
  128 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g448 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat)))) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 4 2 37 19)
  132 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat)) @ #(struct:srcloc quad-main.rkt 22 3 543 10)
  243/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g363 #:flat) (recursive-contract g375 #:flat))) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g361 #:flat) (recursive-contract g373 #:flat))) #:flat))) @ #(struct:srcloc render.rkt 37 3 1391 12)
  110 ms

(-> any/c Float) @ #(struct:srcloc wrap.rkt 31 3 967 11)
  223/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g186 #:flat)) #:flat)) @ #(struct:srcloc quad-main.rkt 28 3 864 9)
  223/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g103 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (or/c String (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat)) #:flat)) (cons/c word (cons/c (recursive-contract (listof (recursive-contract g100 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g122 #:flat)) #:flat)))) @ #(struct:srcloc utils.rkt 47 3 1186 4)
  211/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (or/c String (recursive-contract g161 #:flat)) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)))) @ #(struct:srcloc quads.rkt 30 2 367 4)
  107 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c block (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g186 #:flat)) #:flat)))) @ #(struct:srcloc quad-main.rkt 21 3 497 12)
  105 ms

(-> (listof Any) (recursive-contract (listof (recursive-contract g100 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 50 3 1330 14)
  98 ms

(-> any/c (-> Any Float)) @ #(struct:srcloc ocm-struct-adapted.rkt #f #f #f 0)
  90 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g363 #:flat) (recursive-contract g375 #:flat))) #:flat) Symbol) @ #(struct:srcloc render.rkt 43 3 1703 9)
  157/2 ms

(-> (recursive-contract (or/c (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) (listof wrap38238350)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))) @ #(struct:srcloc wrap.rkt 96 2 3808 16)
  149/2 ms

(->* () #:rest (listof (or/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) any/c)) (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat)) @ #(struct:srcloc wrap.rkt 97 2 3861 11)
  163/2 ms

(->* ((recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) #:rest (listof Symbol) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 13 2 199 17)
  85 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) (cons/c line (cons/c (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 33 3 1034 11)
  80 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))) @ #(struct:srcloc quad-main.rkt 71 3 2715 10)
  80 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c page (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 31 3 994 4)
  80 ms

(->* ((cons/c line (cons/c (recursive-contract (listof (recursive-contract g448 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))))) ((or/c #f Symbol)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 9 2 107 22)
  153/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c line (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 23 3 578 4)
  75 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat)) @ #(struct:srcloc quad-main.rkt 79 3 3042 19)
  60 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c column (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 32 3 1075 6)
  123/2 ms

(->* ((recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) #:rest any/c (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat)) @ #(struct:srcloc wrap.rkt 100 2 3975 17)
  60 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g363 #:flat) (recursive-contract g375 #:flat))) #:flat) (recursive-contract (or/c String (recursive-contract g367 #:flat)) #:flat)) @ #(struct:srcloc render.rkt 41 3 1629 8)
  60 ms

(-> (listof any/c) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 9 2 100 14)
  65 ms

(-> (recursive-contract (or/c (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (listof utils18107384)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 17 2 274 16)
  55 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (or/c String (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) #:flat)) (cons/c word-break (cons/c (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g230 #:flat)) #:flat)))) @ #(struct:srcloc wrap.rkt 40 3 1456 10)
  97/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g230 #:flat)) #:flat)) @ #(struct:srcloc wrap.rkt 48 3 1864 9)
  50 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (or/c String (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 25 2 306 8)
  83/2 ms

g451 @ #(struct:srcloc render.rkt 3 9 35 13)
  37 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c doc (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g186 #:flat)) #:flat)))) @ #(struct:srcloc quad-main.rkt 19 3 411 10)
  37 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g267 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)))) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))))) @ #(struct:srcloc utils.rkt 7 2 78 18)
  40 ms

(-> (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g103 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g116 #:flat) (recursive-contract g130 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 53 3 1413 15)
  40 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 8 2 99 19)
  40 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c page (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 20 3 453 11)
  40 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c column (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 30 3 946 13)
  83/2 ms

(-> (recursive-contract (listof (recursive-contract g267 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c utils18093353))) #:flat) (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 18 2 293 11)
  93/2 ms

(-> $ocm? Natural Any) @ #(struct:srcloc ocm.rkt 4 2 37 9)
  40 ms

(-> (vectorof Any) (vectorof (or/c Natural Symbol)) any/c (-> Natural Natural Any) (-> any/c any) any/c any/c $ocm?) @ #(struct:srcloc #f #f #f #f 0)
  40 ms

(-> any/c boolean?) @ #(struct:srcloc penalty-struct-adapted.rkt #f #f #f 0)
  40 ms

(->* () #:rest (listof (or/c (recursive-contract (listof (recursive-contract g267 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c utils18093353))) #:flat))) (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 15 2 245 11)
  40 ms

g155 @ #(struct:srcloc main.rkt 22 3 590 13)
  33 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c utils18093353))) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 11 2 159 14)
  32 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) any/c (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat)) @ #(struct:srcloc quad-main.rkt 76 3 2938 14)
  30 ms

(-> $ocm? (-> any/c any)) @ #(struct:srcloc ocm-struct.rkt 14 8 259 4)
  30 ms

(->* ((-> any/c any/c any/c) (-> Any Float)) (any/c) any) @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 5 2 49 8)
  30 ms

(-> (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) any/c (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat)) @ #(struct:srcloc wrap.rkt 92 2 3592 11)
  30 ms

(->* ((-> Natural Natural Any) (-> any/c any)) (Any) $ocm?) @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 107 3 4199 8)
  30 ms

(-> any/c (-> any/c any/c any/c)) @ #(struct:srcloc ocm-struct-adapted.rkt #f #f #f 0)
  53/2 ms

(-> any/c any/c $penalty?) @ #(struct:srcloc #<blame> #f #f #f 0)
  63/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g62 #:flat) (recursive-contract g121 #:flat))) #:flat) (cons/c doc (cons/c (recursive-contract (listof (recursive-contract g125 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g53 #:flat)) #:flat)))) @ #(struct:srcloc main.rkt 18 3 457 7)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g445 #:flat) (recursive-contract g465 #:flat))) #:flat) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g456 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g451 #:flat)) #:flat)))) @ #(struct:srcloc quad-main.rkt 4 2 37 7)
  20 ms

(-> (recursive-contract (or/c String (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) #:flat) (recursive-contract (or/c String (recursive-contract g195 #:flat)) #:flat)) @ #(struct:srcloc quad-main.rkt 72 3 2763 14)
  22 ms

(-> any/c any) @ #(struct:srcloc quads.rkt 21 2 244 16)
  43/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) Symbol) @ #(struct:srcloc quad-main.rkt 25 3 695 9)
  20 ms

(-> Any (or/c #f #t)) @ #(struct:srcloc utils.rkt 56 3 1539 16)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) any/c (or/c #f #t)) @ #(struct:srcloc quad-main.rkt 29 3 897 14)
  10 ms

(-> any/c (vectorof (or/c Natural Symbol))) @ #(struct:srcloc ocm-struct-adapted.rkt #f #f #f 0)
  10 ms

(-> any/c any/c any/c) @ #(struct:srcloc wrap.rkt 109 3 4353 13)
  10 ms

(-> $ocm? (vectorof (or/c Natural Symbol))) @ #(struct:srcloc ocm-struct.rkt 14 8 259 4)
  10 ms

(-> any/c any/c any/c any/c any/c Float) @ #(struct:srcloc wrap.rkt 30 3 889 12)
  10 ms

(->* ((recursive-contract (listof (recursive-contract g267 #:flat)) #:flat)) #:rest (listof Symbol) (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 20 2 320 11)
  10 ms

(-> any/c Natural) @ #(struct:srcloc ocm-struct-adapted.rkt #f #f #f 0)
  10 ms

(parametric->/c (A347) (->* ((listof A347)) () (values (listof A347) A347))) @ #(struct:srcloc wrap.rkt 95 2 3746 10)
  10 ms

g351 @ #(struct:srcloc quad-main.rkt 87 3 3442 8)
  17/2 ms

(parametric->/c (A387) (->* ((listof A387) g111) () (values (listof (listof A387))))) @ #(struct:srcloc wrap.rkt 113 2 4600 8)
  10 ms

(-> any/c (vectorof (or/c Natural Symbol)) Void) @ #(struct:srcloc ocm-struct-adapted.rkt 30 3 569 25)
  10 ms

(-> (recursive-contract (or/c String (recursive-contract g276 #:flat)) #:flat) (recursive-contract (or/c String (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 4 2 37 14)
  10 ms

(-> Any Float) @ #(struct:srcloc wrap.rkt 588 46 30933 40)
  10 ms

(-> (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) any/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat)) @ #(struct:srcloc quad-main.rkt 78 3 2988 11)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (or/c String (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) #:flat)) (cons/c optical-kern (cons/c (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g230 #:flat)) #:flat)))) @ #(struct:srcloc wrap.rkt 38 3 1271 12)
  12 ms

(-> $ocm? (-> Natural Natural Any)) @ #(struct:srcloc ocm-struct.rkt 14 8 259 4)
  23/2 ms


BY CALLEE

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attrs
  9281/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g100 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 49 3 1295 10)
  quad-attrs
  3759 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  quad-attr-ref
  2964 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  group-quad-list
  3393/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) any/c) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) (recursive-contract g169 #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g147 #:flat) (recursive-contract g155 #:flat) (recursive-contract g167 #:flat)) #:flat)) @ #(struct:srcloc wrap.rkt 36 3 1146 13)
  quad-attr-ref
  1606 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  quad-list
  1552 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  quad-name
  2005/2 ms
  word-string
  378 ms
  quad->string
  193 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 14 2 165 4)
  piece
  865 ms
  line
  977/2 ms
  column
  82 ms
  page
  60 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g122 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 51 3 1377 9)
  quad-list
  1460 ms

(-> (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))) @ #(struct:srcloc wrap.rkt 46 3 1812 15)
  group-quad-list
  2863/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) any/c (or/c #f #t)) @ #(struct:srcloc wrap.rkt 51 3 1980 14)
  quad-has-attr?
  930 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat) Symbol) @ #(struct:srcloc utils.rkt 48 3 1262 9)
  quad-name
  893 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  quad-has-attr?
  1689/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) (cons/c piece (cons/c (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 41 3 1544 5)
  piece
  808 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) String) @ #(struct:srcloc wrap.rkt 37 3 1237 12)
  word-string
  416 ms
  quad->string
  657/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g103 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat)) any/c) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g103 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g125 #:flat)) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g116 #:flat) (recursive-contract g107 #:flat) (recursive-contract g130 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 57 3 1577 13)
  quad-attr-ref
  708 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  quad-attr-set
  498 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) any/c (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) (recursive-contract g169 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat)) @ #(struct:srcloc wrap.rkt 102 2 4028 13)
  quad-attr-set
  963/2 ms

(-> any/c (vectorof Any) Void) @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm-struct-adapted.rkt 29 3 507 20)
  set-$ocm-min-entrys!
  921/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) (cons/c line (cons/c (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 42 3 1627 4)
  line
  695/2 ms

(vectorof Natural) @ #(struct:srcloc ocm.rkt 140 62 6023 84)
  #(81 83 85 87)
  20 ms
  #(65 67)
  20 ms
  #(45 47 49 51)
  20 ms
  #(137 139 141 143)
  10 ms
  #(127 135)
  10 ms
  #(103)
  10 ms
  #(91 95)
  10 ms
  #(73 75 77 79 81 83 85 87)
  10 ms
  #(65 67 69 71)
  10 ms
  #(41 43 45 47)
  10 ms
  #(27 31)
  10 ms
  #(13 15 17 19)
  23/2 ms
  #(99)
  10 ms
  #(97 99 101 103)
  10 ms
  #(87 95)
  10 ms
  #(81 83 85 87 89 91 93 95)
  10 ms
  #(79)
  10 ms
  #(73 75 77 79)
  10 ms
  #(73 75)
  12 ms
  #(27)
  10 ms
  #(105 107 109 111)
  10 ms
  #(87)
  10 ms
  #(71)
  10 ms
  #(59 63)
  10 ms
  #(53 55 57 59)
  10 ms
  #(49 51)
  10 ms
  #(47 51)
  10 ms
  #(43)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat)) @ #(struct:srcloc wrap.rkt 34 3 1078 10)
  quad-attrs
  591/2 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 21 2 350 10)
  join-quads
  284 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 16 2 259 12)
  split-quad
  153 ms
  flatten-quad
  125 ms

(-> (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)))) (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 80 3 3081 18)
  add-horiz-positions
  377/2 ms
  add-vert-positions
  50 ms

(-> $ocm? (vectorof Any) any) @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm-struct.rkt 14 8 259 4)
  set-$ocm-min-entrys!
  230 ms

(->* ((cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat))))) (any/c) (cons/c line (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 39 3 1460 4)
  insert-spacers-in-line
  178 ms
  fill
  83/2 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))) @ #(struct:srcloc wrap.rkt 93 2 3645 10)
  join-quads
  423/2 ms

(->* ((listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat))) (any/c) (listof (cons/c line (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat)))))) @ #(struct:srcloc quad-main.rkt 37 3 1335 9)
  wrap-best
  203 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 26 2 317 11)
  quads->line
  128 ms
  quads->page
  30 ms
  quads->column
  63/2 ms

(-> any/c (vectorof Any)) @ #(struct:srcloc ocm-struct-adapted.rkt #f #f #f 0)
  $ocm-min-entrys
  381/2 ms

(->* ((listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))) (Float) (listof (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat)))))) @ #(struct:srcloc wrap.rkt 6 2 66 9)
  wrap-best
  367/2 ms

(->* ((cons/c line (cons/c (recursive-contract (listof (recursive-contract g448 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))))) ((or/c Float #f)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 5 2 59 4)
  fill
  327/2 ms

(-> (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))) @ #(struct:srcloc quad-main.rkt 27 3 815 15)
  group-quad-list
  165 ms

(-> $ocm? (vectorof Any)) @ #(struct:srcloc ocm-struct.rkt 14 8 259 4)
  $ocm-min-entrys
  162 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) any/c (listof (listof (or/c #f (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 111 2 4445 6)
  shifts
  156 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))) @ #(struct:srcloc quad-main.rkt 81 3 3129 10)
  split-quad
  160 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g354 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g363 #:flat) (recursive-contract g375 #:flat))) #:flat)) any/c) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g354 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g363 #:flat) (recursive-contract g375 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g358 #:flat)) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g356 #:flat)) #:flat) (recursive-contract g367 #:flat) (recursive-contract (listof (recursive-contract g359 #:flat)) #:flat)) #:flat)) @ #(struct:srcloc render.rkt 39 3 1466 13)
  quad-attr-ref
  143 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)))) @ #(struct:srcloc quads.rkt 23 2 277 10)
  quads->block
  90 ms
  quads->doc
  43 ms

(->* ((or/c (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat)) any/c) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g187 #:flat)) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g195 #:flat) (recursive-contract (listof (recursive-contract g194 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g188 #:flat)) #:flat)) #:flat)) @ #(struct:srcloc quad-main.rkt 26 3 728 13)
  quad-attr-ref
  128 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g448 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat)))) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 4 2 37 19)
  add-horiz-positions
  132 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat)) @ #(struct:srcloc quad-main.rkt 22 3 543 10)
  quad-attrs
  243/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g363 #:flat) (recursive-contract g375 #:flat))) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g361 #:flat) (recursive-contract g373 #:flat))) #:flat))) @ #(struct:srcloc render.rkt 37 3 1391 12)
  flatten-quad
  110 ms

(-> any/c Float) @ #(struct:srcloc wrap.rkt 31 3 967 11)
  $penalty-width
  119/2 ms
  round-float
  52 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g186 #:flat)) #:flat)) @ #(struct:srcloc quad-main.rkt 28 3 864 9)
  quad-list
  223/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g103 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (or/c String (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat)) #:flat)) (cons/c word (cons/c (recursive-contract (listof (recursive-contract g100 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g122 #:flat)) #:flat)))) @ #(struct:srcloc utils.rkt 47 3 1186 4)
  word
  211/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (or/c String (recursive-contract g161 #:flat)) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)))) @ #(struct:srcloc quads.rkt 30 2 367 4)
  word
  55 ms
  word-break
  32 ms
  box
  23/2 ms
  optical-kern
  17/2 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c block (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g186 #:flat)) #:flat)))) @ #(struct:srcloc quad-main.rkt 21 3 497 12)
  quads->block
  105 ms

(-> (listof Any) (recursive-contract (listof (recursive-contract g100 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 50 3 1330 14)
  make-quadattrs
  98 ms

(-> any/c (-> Any Float)) @ #(struct:srcloc ocm-struct-adapted.rkt #f #f #f 0)
  $ocm-entry->value
  90 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g363 #:flat) (recursive-contract g375 #:flat))) #:flat) Symbol) @ #(struct:srcloc render.rkt 43 3 1703 9)
  quad-name
  157/2 ms

(-> (recursive-contract (or/c (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) (listof wrap38238350)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))) @ #(struct:srcloc wrap.rkt 96 2 3808 16)
  flatten-quadtree
  149/2 ms

(->* () #:rest (listof (or/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) any/c)) (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat)) @ #(struct:srcloc wrap.rkt 97 2 3861 11)
  merge-attrs
  163/2 ms

(->* ((recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) #:rest (listof Symbol) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 13 2 199 17)
  quad-attr-remove*
  85 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) (cons/c line (cons/c (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 33 3 1034 11)
  quads->line
  80 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))) @ #(struct:srcloc quad-main.rkt 71 3 2715 10)
  join-quads
  80 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c page (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 31 3 994 4)
  page
  80 ms

(->* ((cons/c line (cons/c (recursive-contract (listof (recursive-contract g448 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))))) ((or/c #f Symbol)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 9 2 107 22)
  insert-spacers-in-line
  153/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c line (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 23 3 578 4)
  line
  75 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat)) @ #(struct:srcloc quad-main.rkt 79 3 3042 19)
  compute-line-height
  60 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c column (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 32 3 1075 6)
  column
  123/2 ms

(->* ((recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) #:rest any/c (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat)) @ #(struct:srcloc wrap.rkt 100 2 3975 17)
  quad-attr-remove*
  60 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g363 #:flat) (recursive-contract g375 #:flat))) #:flat) (recursive-contract (or/c String (recursive-contract g367 #:flat)) #:flat)) @ #(struct:srcloc render.rkt 41 3 1629 8)
  quad-car
  60 ms

(-> (listof any/c) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 9 2 100 14)
  make-quadattrs
  65 ms

(-> (recursive-contract (or/c (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (listof utils18107384)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 17 2 274 16)
  flatten-quadtree
  55 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (or/c String (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) #:flat)) (cons/c word-break (cons/c (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g230 #:flat)) #:flat)))) @ #(struct:srcloc wrap.rkt 40 3 1456 10)
  word-break
  97/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g230 #:flat)) #:flat)) @ #(struct:srcloc wrap.rkt 48 3 1864 9)
  quad-list
  50 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (or/c String (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 25 2 306 8)
  quad-car
  83/2 ms

g451 @ #(struct:srcloc render.rkt 3 9 35 13)
  pdf-renderer%
  37 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c doc (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g186 #:flat)) #:flat)))) @ #(struct:srcloc quad-main.rkt 19 3 411 10)
  quads->doc
  37 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g267 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)))) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))))) @ #(struct:srcloc utils.rkt 7 2 78 18)
  add-vert-positions
  40 ms

(-> (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g103 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g116 #:flat) (recursive-contract g130 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 53 3 1413 15)
  group-quad-list
  40 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 8 2 99 19)
  compute-line-height
  40 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c page (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 20 3 453 11)
  quads->page
  40 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c column (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 30 3 946 13)
  quads->column
  83/2 ms

(-> (recursive-contract (listof (recursive-contract g267 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c utils18093353))) #:flat) (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 18 2 293 11)
  attr-change
  93/2 ms

(-> $ocm? Natural Any) @ #(struct:srcloc ocm.rkt 4 2 37 9)
  min-entry
  40 ms

(-> (vectorof Any) (vectorof (or/c Natural Symbol)) any/c (-> Natural Natural Any) (-> any/c any) any/c any/c $ocm?) @ #(struct:srcloc #f #f #f #f 0)
  $ocm8
  40 ms

(-> any/c boolean?) @ #(struct:srcloc penalty-struct-adapted.rkt #f #f #f 0)
  $penalty?
  30 ms
  $ocm?
  10 ms

(->* () #:rest (listof (or/c (recursive-contract (listof (recursive-contract g267 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c utils18093353))) #:flat))) (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 15 2 245 11)
  merge-attrs
  40 ms

g155 @ #(struct:srcloc main.rkt 22 3 590 13)
  pdf-renderer%
  33 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c utils18093353))) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 11 2 159 14)
  quad-attr-set*
  32 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) any/c (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat)) @ #(struct:srcloc quad-main.rkt 76 3 2938 14)
  quad-attr-set*
  30 ms

(-> $ocm? (-> any/c any)) @ #(struct:srcloc ocm-struct.rkt 14 8 259 4)
  $ocm-entry->value
  30 ms

(->* ((-> any/c any/c any/c) (-> Any Float)) (any/c) any) @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 5 2 49 8)
  make-ocm
  30 ms

(-> (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) any/c (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat)) @ #(struct:srcloc wrap.rkt 92 2 3592 11)
  attr-change
  30 ms

(->* ((-> Natural Natural Any) (-> any/c any)) (Any) $ocm?) @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 107 3 4199 8)
  make-ocm
  30 ms

(-> any/c (-> any/c any/c any/c)) @ #(struct:srcloc ocm-struct-adapted.rkt #f #f #f 0)
  $ocm-matrix-proc
  53/2 ms

(-> any/c any/c $penalty?) @ #(struct:srcloc #<blame> #f #f #f 0)
  $penalty3
  63/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g62 #:flat) (recursive-contract g121 #:flat))) #:flat) (cons/c doc (cons/c (recursive-contract (listof (recursive-contract g125 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g53 #:flat)) #:flat)))) @ #(struct:srcloc main.rkt 18 3 457 7)
  typeset
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g445 #:flat) (recursive-contract g465 #:flat))) #:flat) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g456 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g451 #:flat)) #:flat)))) @ #(struct:srcloc quad-main.rkt 4 2 37 7)
  typeset
  20 ms

(-> (recursive-contract (or/c String (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) #:flat) (recursive-contract (or/c String (recursive-contract g195 #:flat)) #:flat)) @ #(struct:srcloc quad-main.rkt 72 3 2763 14)
  hyphenate-quad
  22 ms

(-> any/c any) @ #(struct:srcloc quads.rkt 21 2 244 16)
  whitespace/nbsp?
  10 ms
  $penalty?
  23/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) Symbol) @ #(struct:srcloc quad-main.rkt 25 3 695 9)
  quad-name
  20 ms

(-> Any (or/c #f #t)) @ #(struct:srcloc utils.rkt 56 3 1539 16)
  whitespace/nbsp?
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) any/c (or/c #f #t)) @ #(struct:srcloc quad-main.rkt 29 3 897 14)
  quad-has-attr?
  10 ms

(-> any/c (vectorof (or/c Natural Symbol))) @ #(struct:srcloc ocm-struct-adapted.rkt #f #f #f 0)
  $ocm-min-row-indices
  10 ms

(-> any/c any/c any/c) @ #(struct:srcloc wrap.rkt 109 3 4353 13)
  ocm-min-entry
  10 ms

(-> $ocm? (vectorof (or/c Natural Symbol))) @ #(struct:srcloc ocm-struct.rkt 14 8 259 4)
  $ocm-min-row-indices
  10 ms

(-> any/c any/c any/c any/c any/c Float) @ #(struct:srcloc wrap.rkt 30 3 889 12)
  measure-text
  10 ms

(->* ((recursive-contract (listof (recursive-contract g267 #:flat)) #:flat)) #:rest (listof Symbol) (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 20 2 320 11)
  attr-delete
  10 ms

(-> any/c Natural) @ #(struct:srcloc ocm-struct-adapted.rkt #f #f #f 0)
  $ocm-finished
  10 ms

(parametric->/c (A347) (->* ((listof A347)) () (values (listof A347) A347))) @ #(struct:srcloc wrap.rkt 95 2 3746 10)
  split-last
  10 ms

g351 @ #(struct:srcloc quad-main.rkt 87 3 3442 8)
  problem%
  17/2 ms

(parametric->/c (A387) (->* ((listof A387) g111) () (values (listof (listof A387))))) @ #(struct:srcloc wrap.rkt 113 2 4600 8)
  break-at
  10 ms

(-> any/c (vectorof (or/c Natural Symbol)) Void) @ #(struct:srcloc ocm-struct-adapted.rkt 30 3 569 25)
  set-$ocm-min-row-indices!
  10 ms

(-> (recursive-contract (or/c String (recursive-contract g276 #:flat)) #:flat) (recursive-contract (or/c String (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 4 2 37 14)
  hyphenate-quad
  10 ms

(-> Any Float) @ #(struct:srcloc wrap.rkt 588 46 30933 40)
  #<procedure:$penalty->value>
  10 ms

(-> (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) any/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat)) @ #(struct:srcloc quad-main.rkt 78 3 2988 11)
  attr-change
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (or/c String (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) #:flat)) (cons/c optical-kern (cons/c (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g230 #:flat)) #:flat)))) @ #(struct:srcloc wrap.rkt 38 3 1271 12)
  optical-kern
  12 ms

(-> $ocm? (-> Natural Natural Any)) @ #(struct:srcloc ocm-struct.rkt 14 8 259 4)
  $ocm-matrix-proc
  23/2 ms


BY CALLER

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  4731/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  183/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  80 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  53 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  50 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 188 39 7839 124)
  andmap @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 75 13 2609 1123)
  splitf-at @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 193 0 5346 285)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  83/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  40 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  38 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  77/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  40 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  30 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  30 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  32 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  30 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  30 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  47/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 188 39 7839 124)
  splitf-at @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 193 0 5346 285)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  22 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attr-remove* @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 255 0 11003 239)
  loop @ #f
  core82 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 342 0 16006 2348)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  17 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  22 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  43/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  merge-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 97 0 3205 143)
  make-first-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 205 2 9095 186)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  23/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  render-optical-kerns @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 318 0 14773 890)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  15 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  loop @ #f
  loop @ #f
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  join-quads @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 181 0 7350 2263)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attr-remove* @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 255 0 11003 239)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  loop @ #f
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 183 24 7444 1160)
  splitf-at @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 193 0 5346 285)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attr-remove* @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 255 0 11003 239)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  loop @ #f
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 188 39 7839 124)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 188 39 7839 124)
  andmap @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 75 13 2609 1123)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 196 2 5470 160)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 188 39 7839 124)
  andmap @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 75 13 2609 1123)
  splitf-at @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 193 0 5346 285)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 188 39 7839 124)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 196 2 5470 160)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  hyphenate-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 294 0 12683 265)
  loop @ #f
  hyphenate-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 294 0 12683 265)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  hyphenate-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 294 0 12683 265)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  hyphenate-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 294 0 12683 265)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  12 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  23/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  23/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  render-optical-kerns @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 318 0 14773 890)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  loop @ #f
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  15 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  33/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  loop @ #f
  loop @ #f
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  17/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 183 24 7444 1160)
  splitf-at @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 193 0 5346 285)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  loop @ #f
  loop @ #f
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 183 24 7444 1160)
  splitf-at @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 193 0 5346 285)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  loop @ #f
  loop @ #f
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attr-remove* @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 255 0 11003 239)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attr-remove* @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 255 0 11003 239)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  loop @ #f
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 183 24 7444 1160)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 196 2 5470 160)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  17/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  15 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attr-remove* @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 255 0 11003 239)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 183 24 7444 1160)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 196 2 5470 160)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  17/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  breakable? @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 144 0 5751 279)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 202 50 8849 100)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/sugar-list.rkt 53 4 2442 277)
  slicef-after @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/sugar-list.rkt 51 0 2364 478)
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attr-remove* @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 255 0 11003 239)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  15 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  loop @ #f
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  core82 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 342 0 16006 2348)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  core82 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 342 0 16006 2348)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  loop @ #f
  loop @ #f
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  33/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  compute-line-height @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 270 0 11653 146)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  12 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  12 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  8 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 7 2 75 10)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 133 2 5182 183)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g100 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 49 3 1295 10)
  3759 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  1477 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  42 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  83/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  77/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  35 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 118 38 4718 169)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 121 2 4893 449)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  30 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  40 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  37 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  35 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 118 38 4718 169)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 121 2 4893 449)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  30 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  22 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  33/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  font-attributes-with-defaults @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 214 0 9550 401)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 470 22 23054 345)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  43/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  43/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  render-optical-kerns @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 318 0 14773 890)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  18 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 470 22 23054 345)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  37/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  22 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  12 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  15 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  23/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 202 50 8849 100)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/sugar-list.rkt 53 4 2442 277)
  slicef-after @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/sugar-list.rkt 51 0 2364 478)
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  17/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  make-first-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 205 2 9095 186)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 470 22 23054 345)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  23/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 503 45 25196 180)
  for-loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/vector.rkt 49 2 1891 133)
  vector-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/vector.rkt 92 0 3643 178)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  loop @ #f
  loop @ #f
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  render-optical-kerns @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 318 0 14773 890)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  17/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  make-first-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 205 2 9095 186)
  loop @ #f
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  font-attributes-with-defaults @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 214 0 9550 401)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 470 22 23054 345)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  27/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  15 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 183 24 7444 1160)
  splitf-at @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 193 0 5346 285)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  core82 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 342 0 16006 2348)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  compute-line-height @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 270 0 11653 146)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  17/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  compute-line-height @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 270 0 11653 146)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  quad-width @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 228 0 10214 391)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  8 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) Symbol) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g82 #:flat) (recursive-contract g88 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract g92 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract g90 #:flat) (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 15 2 172 13)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  627 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  253/2 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  40 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  45 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  40 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 118 38 4718 169)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 121 2 4893 449)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  30 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  30 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  42 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  30 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  30 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  57/2 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  18 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  quad-width @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 228 0 10214 391)
  loop @ #f
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  quad-width @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 228 0 10214 391)
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  ascent @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 242 0 10852 393)
  loop @ #f
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  ascent @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 242 0 10852 393)
  loop @ #f
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  17/2 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  17/2 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  8 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  make-first-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 205 2 9095 186)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 470 22 23054 345)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  font-attributes-with-defaults @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 214 0 9550 401)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 470 22 23054 345)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  15 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 118 38 4718 169)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 121 2 4893 449)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 470 22 23054 345)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 503 45 25196 180)
  for-loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/vector.rkt 49 2 1891 133)
  vector-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/vector.rkt 92 0 3643 178)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  15 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  loop @ #f
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  15 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  loop @ #f
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  15 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  make-first-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 205 2 9095 186)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  8 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 118 38 4718 169)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 121 2 4893 449)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 118 38 4718 169)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 121 2 4893 449)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  ascent @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 242 0 10852 393)
  loop @ #f
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  core82 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 342 0 16006 2348)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  core82 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 342 0 16006 2348)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  core82 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 342 0 16006 2348)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  12 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))) @ #(struct:srcloc quads.rkt 4 2 37 15)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) any/c) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) (recursive-contract g169 #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g147 #:flat) (recursive-contract g155 #:flat) (recursive-contract g167 #:flat)) #:flat)) @ #(struct:srcloc wrap.rkt 36 3 1146 13)
  1606 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  711 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  40 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  63/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  loop @ #f
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  43/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  17 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  24 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 330 5 15374 255)
  render-optical-kerns @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 318 0 14773 890)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  15 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 188 39 7839 124)
  andmap @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 75 13 2609 1123)
  splitf-at @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 193 0 5346 285)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  hyphenate-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 294 0 12683 265)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  hyphenate-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 294 0 12683 265)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  27/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  core30 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 164 2 6585 452)
  loop @ #f
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  8 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  core30 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 164 2 6585 452)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  12 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  core30 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 164 2 6585 452)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  core30 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 164 2 6585 452)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  core30 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 164 2 6585 452)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  23/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  loop @ #f
  loop @ #f
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  loop @ #f
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  merge-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 97 0 3205 143)
  make-first-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 205 2 9095 186)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  17/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  23/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  merge-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 97 0 3205 143)
  make-first-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 205 2 9095 186)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  quad-attr-remove* @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 255 0 11003 239)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  17/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 183 24 7444 1160)
  splitf-at @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 193 0 5346 285)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  merge-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 97 0 3205 143)
  loop @ #f
  loop @ #f
  core82 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 342 0 16006 2348)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  loop @ #f
  loop @ #f
  loop @ #f
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  7 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 8 2 88 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  1839/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 32 2 388 12)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  63 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  font-attributes-with-defaults @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 214 0 9550 401)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 470 22 23054 345)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  18 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 188 39 7839 124)
  splitf-at @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 193 0 5346 285)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 183 24 7444 1160)
  splitf-at @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 193 0 5346 285)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  17/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 32 2 388 12)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 32 2 388 12)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 18 2 214 11)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 18 2 214 11)
  render-optical-kerns @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 318 0 14773 890)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 18 2 214 11)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  loop @ #f
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  merge-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 97 0 3205 143)
  make-first-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 205 2 9095 186)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 18 2 214 11)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 18 2 214 11)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 32 2 388 12)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  15 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 18 2 214 11)
  make-first-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 205 2 9095 186)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 18 2 214 11)
  font-attributes-with-defaults @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 214 0 9550 401)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 470 22 23054 345)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 32 2 388 12)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 32 2 388 12)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 118 38 4718 169)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 121 2 4893 449)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 183 24 7444 1160)
  splitf-at @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 193 0 5346 285)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 18 2 214 11)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 32 2 388 12)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 18 2 214 11)
  quad-width @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 228 0 10214 391)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 18 2 214 11)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 18 2 214 11)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  8 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  loop @ #f
  loop @ #f
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  quad-attr-set @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 231 0 10253 62)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 18 2 214 11)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 18 2 214 11)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  17/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  17/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 154 53 6103 37)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  flatten-attrs @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 106 0 3587 1346)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) any) @ #(struct:srcloc quads.rkt 6 2 63 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  1215/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 14 2 165 4)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  72 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  55 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 14 2 165 4)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  40 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  33 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 16 2 188 6)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  30 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  63/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  30 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 14 2 165 4)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  loop @ #f
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  43/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  loop @ #f
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  25 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 118 38 4718 169)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 121 2 4893 449)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  22 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 330 5 15374 255)
  render-optical-kerns @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 318 0 14773 890)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  core82 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 342 0 16006 2348)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  23/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  breakable? @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 144 0 5751 279)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 202 50 8849 100)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/sugar-list.rkt 53 4 2442 277)
  slicef-after @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/sugar-list.rkt 51 0 2364 478)
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  ascent @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 242 0 10852 393)
  loop @ #f
  loop @ #f
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  quad-width @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 228 0 10214 391)
  loop @ #f
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  loop @ #f
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 470 22 23054 345)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 118 38 4718 169)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 121 2 4893 449)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 118 38 4718 169)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 121 2 4893 449)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  quad-width @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 228 0 10214 391)
  loop @ #f
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  23/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  breakable? @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 144 0 5751 279)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 202 50 8849 100)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/sugar-list.rkt 53 4 2442 277)
  slicef-after @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/sugar-list.rkt 51 0 2364 478)
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  12 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  15 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 118 38 4718 169)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 121 2 4893 449)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  loop @ #f
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  quad-width @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 228 0 10214 391)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 20 2 237 4)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  8 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 27 2 331 5)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g122 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 51 3 1377 9)
  1460 ms

(-> (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))) @ #(struct:srcloc wrap.rkt 46 3 1812 15)
  2863/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) any/c (or/c #f #t)) @ #(struct:srcloc wrap.rkt 51 3 1980 14)
  930 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat) Symbol) @ #(struct:srcloc utils.rkt 48 3 1262 9)
  893 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  773/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  40 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  67/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  43/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  font-attributes-with-defaults @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 214 0 9550 401)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 470 22 23054 345)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  22 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 470 22 23054 345)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  17/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  33/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  make-first-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 205 2 9095 186)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 470 22 23054 345)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 503 45 25196 180)
  for-loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/vector.rkt 49 2 1891 133)
  vector-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/vector.rkt 92 0 3643 178)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  12 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  loop @ #f
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  17/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 118 38 4718 169)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 121 2 4893 449)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  23/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 118 38 4718 169)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 121 2 4893 449)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  12 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  12 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) Symbol any) @ #(struct:srcloc quads.rkt 17 2 197 14)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) (cons/c piece (cons/c (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 41 3 1544 5)
  808 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) String) @ #(struct:srcloc wrap.rkt 37 3 1237 12)
  1489/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g103 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat)) any/c) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g103 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g125 #:flat)) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g116 #:flat) (recursive-contract g107 #:flat) (recursive-contract g130 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 57 3 1577 13)
  708 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  313/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  30 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  83/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  37/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  15 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  15 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  core82 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 342 0 16006 2348)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  core82 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 342 0 16006 2348)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  make-first-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 205 2 9095 186)
  loop @ #f
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  12 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  make-first-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 205 2 9095 186)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  make-first-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 205 2 9095 186)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  make-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 199 0 8548 845)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 118 38 4718 169)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 121 2 4893 449)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  loop @ #f
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  core82 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 342 0 16006 2348)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  17/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  8 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) Symbol (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g273 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g289 #:flat) (recursive-contract g302 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g296 #:flat)) #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 9 2 121 13)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) any/c (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) (recursive-contract g169 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat)) @ #(struct:srcloc wrap.rkt 102 2 4028 13)
  963/2 ms

(-> any/c (vectorof Any) Void) @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm-struct-adapted.rkt 29 3 507 20)
  921/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) (cons/c line (cons/c (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 42 3 1627 4)
  695/2 ms

(vectorof Natural) @ #(struct:srcloc ocm.rkt 140 62 6023 84)
  627/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat)) @ #(struct:srcloc wrap.rkt 34 3 1078 10)
  591/2 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 21 2 350 10)
  257/2 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 21 2 350 10)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  103/2 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 21 2 350 10)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  25 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 21 2 350 10)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 21 2 350 10)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 21 2 350 10)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 21 2 350 10)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 118 38 4718 169)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 121 2 4893 449)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  12 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 21 2 350 10)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 118 38 4718 169)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 121 2 4893 449)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 21 2 350 10)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 21 2 350 10)
  core82 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 342 0 16006 2348)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  17/2 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 21 2 350 10)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  17/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 16 2 259 12)
  208 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 6 2 65 10)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  30 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 6 2 65 10)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 6 2 65 10)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  20 ms

(-> (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)))) (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 80 3 3081 18)
  477/2 ms

(-> $ocm? (vectorof Any) any) @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm-struct.rkt 14 8 259 4)
  230 ms

(->* ((cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat))))) (any/c) (cons/c line (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 39 3 1460 4)
  439/2 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))) @ #(struct:srcloc wrap.rkt 93 2 3645 10)
  423/2 ms

(->* ((listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat))) (any/c) (listof (cons/c line (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat)))))) @ #(struct:srcloc quad-main.rkt 37 3 1335 9)
  203 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 31 2 374 11)
  60 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 31 2 374 11)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  33 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 26 2 317 11)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  20 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 24 2 290 13)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  43/2 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 26 2 317 11)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 24 2 290 13)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 31 2 374 11)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  loop @ #f
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  15 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 31 2 374 11)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat))) #:flat))))) @ #(struct:srcloc quads.rkt 31 2 374 11)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  loop @ #f
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> any/c (vectorof Any)) @ #(struct:srcloc ocm-struct-adapted.rkt #f #f #f 0)
  381/2 ms

(->* ((listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))) (Float) (listof (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat)))))) @ #(struct:srcloc wrap.rkt 6 2 66 9)
  60 ms

(->* ((listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))) (Float) (listof (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat)))))) @ #(struct:srcloc wrap.rkt 6 2 66 9)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  30 ms

(->* ((listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))) (Float) (listof (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat)))))) @ #(struct:srcloc wrap.rkt 6 2 66 9)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(->* ((listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))) (Float) (listof (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat)))))) @ #(struct:srcloc wrap.rkt 6 2 66 9)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(->* ((listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))) (Float) (listof (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat)))))) @ #(struct:srcloc wrap.rkt 6 2 66 9)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  20 ms

(->* ((listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))) (Float) (listof (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat)))))) @ #(struct:srcloc wrap.rkt 6 2 66 9)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  23/2 ms

(->* ((listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))) (Float) (listof (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat)))))) @ #(struct:srcloc wrap.rkt 6 2 66 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  12 ms

(->* ((listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))) (Float) (listof (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat)))))) @ #(struct:srcloc wrap.rkt 6 2 66 9)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((cons/c line (cons/c (recursive-contract (listof (recursive-contract g448 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))))) ((or/c Float #f)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 5 2 59 4)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  307/2 ms

(->* ((cons/c line (cons/c (recursive-contract (listof (recursive-contract g448 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))))) ((or/c Float #f)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 5 2 59 4)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))) @ #(struct:srcloc quad-main.rkt 27 3 815 15)
  165 ms

(-> $ocm? (vectorof Any)) @ #(struct:srcloc ocm-struct.rkt 14 8 259 4)
  162 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) any/c (listof (listof (or/c #f (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 111 2 4445 6)
  156 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))) @ #(struct:srcloc quad-main.rkt 81 3 3129 10)
  160 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g354 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g363 #:flat) (recursive-contract g375 #:flat))) #:flat)) any/c) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g354 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g363 #:flat) (recursive-contract g375 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g358 #:flat)) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g356 #:flat)) #:flat) (recursive-contract g367 #:flat) (recursive-contract (listof (recursive-contract g359 #:flat)) #:flat)) #:flat)) @ #(struct:srcloc render.rkt 39 3 1466 13)
  143 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)))) @ #(struct:srcloc quads.rkt 23 2 277 10)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  33 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)))) @ #(struct:srcloc quads.rkt 33 2 403 12)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  30 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)))) @ #(struct:srcloc quads.rkt 33 2 403 12)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  30 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)))) @ #(struct:srcloc quads.rkt 33 2 403 12)
  30 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)))) @ #(struct:srcloc quads.rkt 23 2 277 10)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(->* ((or/c (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat)) any/c) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g187 #:flat)) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g195 #:flat) (recursive-contract (listof (recursive-contract g194 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g188 #:flat)) #:flat)) #:flat)) @ #(struct:srcloc quad-main.rkt 26 3 728 13)
  128 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g448 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat)))) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 4 2 37 19)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  187/2 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g448 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat)))) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 4 2 37 19)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  15 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g448 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat)))) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 4 2 37 19)
  block-quads->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 305 0 17298 67)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  17/2 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g448 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat)))) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 4 2 37 19)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  15 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat)) @ #(struct:srcloc quad-main.rkt 22 3 543 10)
  243/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g363 #:flat) (recursive-contract g375 #:flat))) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g361 #:flat) (recursive-contract g373 #:flat))) #:flat))) @ #(struct:srcloc render.rkt 37 3 1391 12)
  110 ms

(-> any/c Float) @ #(struct:srcloc wrap.rkt 31 3 967 11)
  223/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g186 #:flat)) #:flat)) @ #(struct:srcloc quad-main.rkt 28 3 864 9)
  223/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g103 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (or/c String (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat)) #:flat)) (cons/c word (cons/c (recursive-contract (listof (recursive-contract g100 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g122 #:flat)) #:flat)))) @ #(struct:srcloc utils.rkt 47 3 1186 4)
  211/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (or/c String (recursive-contract g161 #:flat)) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)))) @ #(struct:srcloc quads.rkt 30 2 367 4)
  151/2 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (or/c String (recursive-contract g161 #:flat)) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)))) @ #(struct:srcloc quads.rkt 30 2 367 4)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 87 14 2836 173)
  append-map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/list.rkt 559 2 20709 170)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (or/c String (recursive-contract g161 #:flat)) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)))) @ #(struct:srcloc quads.rkt 28 2 339 10)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g101 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c quads850262))) #:flat))) #:rest (listof (recursive-contract (or/c String (recursive-contract g161 #:flat)) #:flat)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g96 #:flat)) #:flat)))) @ #(struct:srcloc quads.rkt 10 2 117 3)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 197 4 8612 999)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  23/2 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c block (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g186 #:flat)) #:flat)))) @ #(struct:srcloc quad-main.rkt 21 3 497 12)
  105 ms

(-> (listof Any) (recursive-contract (listof (recursive-contract g100 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 50 3 1330 14)
  98 ms

(-> any/c (-> Any Float)) @ #(struct:srcloc ocm-struct-adapted.rkt #f #f #f 0)
  90 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g363 #:flat) (recursive-contract g375 #:flat))) #:flat) Symbol) @ #(struct:srcloc render.rkt 43 3 1703 9)
  157/2 ms

(-> (recursive-contract (or/c (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) (listof wrap38238350)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))) @ #(struct:srcloc wrap.rkt 96 2 3808 16)
  149/2 ms

(->* () #:rest (listof (or/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) any/c)) (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat)) @ #(struct:srcloc wrap.rkt 97 2 3861 11)
  163/2 ms

(->* ((recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) #:rest (listof Symbol) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 13 2 199 17)
  55 ms

(->* ((recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) #:rest (listof Symbol) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 13 2 199 17)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) #:rest (listof Symbol) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 13 2 199 17)
  quad-width @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 228 0 10214 391)
  loop @ #f
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)) #:rest (listof Symbol) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 13 2 199 17)
  quad-width @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 228 0 10214 391)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) (cons/c line (cons/c (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 33 3 1034 11)
  80 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))) @ #(struct:srcloc quad-main.rkt 71 3 2715 10)
  80 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c page (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 31 3 994 4)
  80 ms

(->* ((cons/c line (cons/c (recursive-contract (listof (recursive-contract g448 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))))) ((or/c #f Symbol)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 9 2 107 22)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  113/2 ms

(->* ((cons/c line (cons/c (recursive-contract (listof (recursive-contract g448 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))))) ((or/c #f Symbol)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 9 2 107 22)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(->* ((cons/c line (cons/c (recursive-contract (listof (recursive-contract g448 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g422 #:flat) (recursive-contract g442 #:flat))) #:flat))))) ((or/c #f Symbol)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g450 #:flat)) #:flat) (recursive-contract g444 #:flat))) #:flat))))) @ #(struct:srcloc wrap.rkt 9 2 107 22)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c line (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 23 3 578 4)
  75 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat)) @ #(struct:srcloc quad-main.rkt 79 3 3042 19)
  60 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c column (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 32 3 1075 6)
  123/2 ms

(->* ((recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) #:rest any/c (recursive-contract (cons/c Symbol (cons/c (recursive-contract g147 #:flat) (recursive-contract g167 #:flat))) #:flat)) @ #(struct:srcloc wrap.rkt 100 2 3975 17)
  60 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g363 #:flat) (recursive-contract g375 #:flat))) #:flat) (recursive-contract (or/c String (recursive-contract g367 #:flat)) #:flat)) @ #(struct:srcloc render.rkt 41 3 1629 8)
  60 ms

(-> (listof any/c) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 9 2 100 14)
  quad-attr-remove* @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 255 0 11003 239)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  loop @ #f
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (listof any/c) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 9 2 100 14)
  loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 144 3 5591 696)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  split-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 162 0 6497 596)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (listof any/c) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 9 2 100 14)
  20 ms

(-> (listof any/c) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 9 2 100 14)
  quad-attr-remove* @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 255 0 11003 239)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  15 ms

(-> (listof any/c) (recursive-contract (listof (recursive-contract g104 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 9 2 100 14)
  flatten-quad @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/utils.rkt 142 0 5543 746)
  render method in abstract-renderer% @ #f
  render-to-file method in pdf-renderer% @ #f
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (or/c (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (listof utils18107384)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 17 2 274 16)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  25 ms

(-> (recursive-contract (or/c (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (listof utils18107384)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 17 2 274 16)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (or/c (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (listof utils18107384)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 17 2 274 16)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (recursive-contract (or/c (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (listof utils18107384)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 17 2 274 16)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (or/c String (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) #:flat)) (cons/c word-break (cons/c (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g230 #:flat)) #:flat)))) @ #(struct:srcloc wrap.rkt 40 3 1456 10)
  97/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g230 #:flat)) #:flat)) @ #(struct:srcloc wrap.rkt 48 3 1864 9)
  50 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g82 #:flat) (recursive-contract g88 #:flat))) #:flat) (recursive-contract (or/c String (recursive-contract g163 #:flat)) #:flat)) @ #(struct:srcloc quads.rkt 25 2 306 8)
  83/2 ms

g451 @ #(struct:srcloc render.rkt 3 9 35 13)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  37/2 ms

g451 @ #(struct:srcloc render.rkt 3 9 35 13)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  37/2 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c doc (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g186 #:flat)) #:flat)))) @ #(struct:srcloc quad-main.rkt 19 3 411 10)
  37 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g267 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)))) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))))) @ #(struct:srcloc utils.rkt 7 2 78 18)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  20 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g267 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)))) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))))) @ #(struct:srcloc utils.rkt 7 2 78 18)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g267 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat)))) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat))))) @ #(struct:srcloc utils.rkt 7 2 78 18)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  10 ms

(-> (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g103 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g118 #:flat) (recursive-contract g91 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g116 #:flat) (recursive-contract g130 #:flat))) #:flat))) @ #(struct:srcloc utils.rkt 53 3 1413 15)
  40 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 8 2 99 19)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  30 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 8 2 99 19)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c page (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 20 3 453 11)
  40 ms

(-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) (cons/c column (cons/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat))))) @ #(struct:srcloc quad-main.rkt 30 3 946 13)
  83/2 ms

(-> (recursive-contract (listof (recursive-contract g267 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c utils18093353))) #:flat) (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 18 2 293 11)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  15 ms

(-> (recursive-contract (listof (recursive-contract g267 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c utils18093353))) #:flat) (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 18 2 293 11)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  23/2 ms

(-> (recursive-contract (listof (recursive-contract g267 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c utils18093353))) #:flat) (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 18 2 293 11)
  core100 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 627 0 32793 1366)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (listof (recursive-contract g267 #:flat)) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c utils18093353))) #:flat) (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 18 2 293 11)
  10 ms

(-> $ocm? Natural Any) @ #(struct:srcloc ocm.rkt 4 2 37 9)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 466 4 22786 880)
  make-piece-vectors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 464 0 22720 1225)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> $ocm? Natural Any) @ #(struct:srcloc ocm.rkt 4 2 37 9)
  render-piece @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 259 0 11706 1172)
  render-pieces @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 390 0 18838 193)
  pieces->line @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 407 0 19534 1919)
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  loop @ #f
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> $ocm? Natural Any) @ #(struct:srcloc ocm.rkt 4 2 37 9)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  find-survivors @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 67 2 2074 1553)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> $ocm? Natural Any) @ #(struct:srcloc ocm.rkt 4 2 37 9)
  10 ms

(-> (vectorof Any) (vectorof (or/c Natural Symbol)) any/c (-> Natural Natural Any) (-> any/c any) any/c any/c $ocm?) @ #(struct:srcloc #f #f #f #f 0)
  40 ms

(-> any/c boolean?) @ #(struct:srcloc penalty-struct-adapted.rkt #f #f #f 0)
  40 ms

(->* () #:rest (listof (or/c (recursive-contract (listof (recursive-contract g267 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c utils18093353))) #:flat))) (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 15 2 245 11)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 651 4 34436 251)
  add-horiz-positions @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 649 0 34347 424)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 212 49 10141 88)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  loop @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 26 19 771 148)
  map @ #(struct:srcloc /home/ben/code/racket/fork/racket/collects/racket/private/map.rkt 21 13 588 924)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 210 35 9988 266)
  columns-mapper @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 208 2 9883 374)
  loop @ #f
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  20 ms

(->* () #:rest (listof (or/c (recursive-contract (listof (recursive-contract g267 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c utils18093353))) #:flat))) (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 15 2 245 11)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(->* () #:rest (listof (or/c (recursive-contract (listof (recursive-contract g267 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c utils18093353))) #:flat))) (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 15 2 245 11)
  10 ms

g155 @ #(struct:srcloc main.rkt 22 3 590 13)
  33 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c utils18093353))) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 11 2 159 14)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g285 #:flat) (recursive-contract g298 #:flat))) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c utils18093353))) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) @ #(struct:srcloc utils.rkt 11 2 159 14)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  12 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) any/c (recursive-contract (cons/c Symbol (cons/c (recursive-contract g181 #:flat) (recursive-contract g201 #:flat))) #:flat)) @ #(struct:srcloc quad-main.rkt 76 3 2938 14)
  30 ms

(-> $ocm? (-> any/c any)) @ #(struct:srcloc ocm-struct.rkt 14 8 259 4)
  30 ms

(->* ((-> any/c any/c any/c) (-> Any Float)) (any/c) any) @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 5 2 49 8)
  30 ms

(-> (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) any/c (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat)) @ #(struct:srcloc wrap.rkt 92 2 3592 11)
  30 ms

(->* ((-> Natural Natural Any) (-> any/c any)) (Any) $ocm?) @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 107 3 4199 8)
  30 ms

(-> any/c (-> any/c any/c any/c)) @ #(struct:srcloc ocm-struct-adapted.rkt #f #f #f 0)
  53/2 ms

(-> any/c any/c $penalty?) @ #(struct:srcloc #<blame> #f #f #f 0)
  63/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g62 #:flat) (recursive-contract g121 #:flat))) #:flat) (cons/c doc (cons/c (recursive-contract (listof (recursive-contract g125 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g53 #:flat)) #:flat)))) @ #(struct:srcloc main.rkt 18 3 457 7)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g445 #:flat) (recursive-contract g465 #:flat))) #:flat) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g456 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g451 #:flat)) #:flat)))) @ #(struct:srcloc quad-main.rkt 4 2 37 7)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  10 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g445 #:flat) (recursive-contract g465 #:flat))) #:flat) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g456 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g451 #:flat)) #:flat)))) @ #(struct:srcloc quad-main.rkt 4 2 37 7)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> (recursive-contract (or/c String (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat)) #:flat) (recursive-contract (or/c String (recursive-contract g195 #:flat)) #:flat)) @ #(struct:srcloc quad-main.rkt 72 3 2763 14)
  22 ms

(-> any/c any) @ #(struct:srcloc quads.rkt 21 2 244 16)
  43/2 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) Symbol) @ #(struct:srcloc quad-main.rkt 25 3 695 9)
  20 ms

(-> Any (or/c #f #t)) @ #(struct:srcloc utils.rkt 56 3 1539 16)
  20 ms

(-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g183 #:flat) (recursive-contract g203 #:flat))) #:flat) any/c (or/c #f #t)) @ #(struct:srcloc quad-main.rkt 29 3 897 14)
  10 ms

(-> any/c (vectorof (or/c Natural Symbol))) @ #(struct:srcloc ocm-struct-adapted.rkt #f #f #f 0)
  10 ms

(-> any/c any/c any/c) @ #(struct:srcloc wrap.rkt 109 3 4353 13)
  10 ms

(-> $ocm? (vectorof (or/c Natural Symbol))) @ #(struct:srcloc ocm-struct.rkt 14 8 259 4)
  10 ms

(-> any/c any/c any/c any/c any/c Float) @ #(struct:srcloc wrap.rkt 30 3 889 12)
  10 ms

(->* ((recursive-contract (listof (recursive-contract g267 #:flat)) #:flat)) #:rest (listof Symbol) (recursive-contract (listof (recursive-contract g270 #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 20 2 320 11)
  penalty @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 550 5 28371 2514)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 118 38 4718 169)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 121 2 4893 449)
  concave-minima @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 133 0 5596 662)
  advance! @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 178 0 7510 3870)
  min-index @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/ocm.rkt 171 0 7238 202)
  core95 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 497 0 24739 6999)
  core87 @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/wrap.rkt 450 2 21882 743)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  contract-profile-thunk @ #(struct:srcloc /home/ben/code/racket/fork/racket/share/pkgs/contract-profile/main.rkt 243 0 9731 65)
  [running body] @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt #f #f #f #f)
  10 ms

(-> any/c Natural) @ #(struct:srcloc ocm-struct-adapted.rkt #f #f #f 0)
  10 ms

(parametric->/c (A347) (->* ((listof A347)) () (values (listof A347) A347))) @ #(struct:srcloc wrap.rkt 95 2 3746 10)
  10 ms

g351 @ #(struct:srcloc quad-main.rkt 87 3 3442 8)
  17/2 ms

(parametric->/c (A387) (->* ((listof A387) g111) () (values (listof (listof A387))))) @ #(struct:srcloc wrap.rkt 113 2 4600 8)
  10 ms

(-> any/c (vectorof (or/c Natural Symbol)) Void) @ #(struct:srcloc ocm-struct-adapted.rkt 30 3 569 25)
  10 ms

(-> (recursive-contract (or/c String (recursive-contract g276 #:flat)) #:flat) (recursive-contract (or/c String (recursive-contract (cons/c Symbol (cons/c (recursive-contract g287 #:flat) (recursive-contract g300 #:flat))) #:flat)) #:flat)) @ #(struct:srcloc utils.rkt 4 2 37 14)
  block->lines @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 167 0 7445 1973)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 119 55 4842 224)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 116 36 4609 460)
  for-loop @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 113 17 4422 650)
  typeset @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/quad-main.rkt 110 0 4335 807)
  #f @ #(struct:srcloc /home/ben/code/racket/benchmark/gradual-typing-performance/quad/benchmark/variation1111111111111111/main.rkt 40 28 1141 145)
  10 ms

(-> Any Float) @ #(struct:srcloc wrap.rkt 588 46 30933 40)
  10 ms

(-> (recursive-contract (listof (recursive-contract g192 #:flat)) #:flat) any/c (recursive-contract (listof (recursive-contract g190 #:flat)) #:flat)) @ #(struct:srcloc quad-main.rkt 78 3 2988 11)
  10 ms

(->* ((or/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (or/c String (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g175 #:flat)) #:flat) (recursive-contract g169 #:flat))) #:flat)) #:flat)) (cons/c optical-kern (cons/c (recursive-contract (listof (recursive-contract g173 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g230 #:flat)) #:flat)))) @ #(struct:srcloc wrap.rkt 38 3 1271 12)
  12 ms

(-> $ocm? (-> Natural Natural Any)) @ #(struct:srcloc ocm-struct.rkt 14 8 259 4)
  23/2 ms

