Summary of Contract Profile result

(note that we're double-counting data + adaptor, wouldn't happen with r/t/c)
(note that nothing is polymorphic because of the lattice)

* echo : nothing
* synth
- top 5 are higher-order (52647ms = 75% of total runtime)
- worst is array-unsafe-proc, 2nd-word is array constructor
* gregor
- all flat
- omg, spent 311ms on any->any contract. Is this just arity?
  or, is it just repeated indirection?
- worst is any->bool, all for structs. (1937ms = 33%)
  most common is DateTime? = 574ms
* kcfa
- worst is struct predicates, 8 contracts total, 873937ms, 37%.
- next worst, at 559546ms, is a hash of bindings & closures (store operations)
  (-> hash hash hash)
  seems the predicate checks are a symptom of this cause
* lnm
- 3 contracts: dc, "parse", var->mean. And low=50% cost anyway
* mbta : nothing
* morsecode
- cost is expected. just string->string functions anyway
* quad
- the List* contract looks very shitty (fixing unlikely to help quad, but maybe the contracts)
- top 5 are all ugly-rec but only 14666ms = 35%
* sieve
- contracts aren't fancy! but they are many
* snake
- top 5 from adaptor, 832560ms = 86%
- very worst are predicates = 468908ms
- nothing higher-order, the at most lists
* suffixtree
- only 1 HO, 3584ms (double-counted)
- top 5 predicates + data accessors (2729409ms, 65%)
* tetris
- accessors, predicates, = are top 5 = 1220083ms, 96%
- (overwhelmingly acc + pred)

