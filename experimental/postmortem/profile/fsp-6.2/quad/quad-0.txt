911 samples


Contracts
account(s) for 82.52% of total running time
7988 / 9680 ms

Cost Breakdown
  4531/2 ms : quad-attrs (-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g168 #:flat) (recursive-contract g86 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g172 #:flat)) #:flat))
  1691/2 ms : quad-attr-ref (->* ((or/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) (recursive-contract g220 #:flat))) #:flat)) any/c) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) (recursive-contract g220 #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) (recursive-contract g220 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g206 #:flat) (recursive-contract g218 #:flat) (recursive-contract g212 #:flat)) #:flat))
  1607/2 ms : quad-list (-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g168 #:flat) (recursive-contract g86 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g162 #:flat)) #:flat))
  1425/2 ms : group-quad-list (-> (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) (recursive-contract g220 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g201 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g204 #:flat)) #:flat))) #:flat)))
  594 ms : quad-name (-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g168 #:flat) (recursive-contract g86 #:flat))) #:flat) Symbol)
  343 ms : quad-has-attr? (-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) (recursive-contract g220 #:flat))) #:flat) any/c (or/c #f #t))
  655/2 ms : piece (->* ((or/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) (recursive-contract g220 #:flat))) #:flat)) (cons/c piece (cons/c (recursive-contract (listof (recursive-contract g197 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g201 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g204 #:flat)) #:flat))) #:flat)))))
  453/2 ms : quad-attr-ref (->* ((or/c (recursive-contract (listof (recursive-contract g174 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g168 #:flat) (recursive-contract g86 #:flat))) #:flat)) any/c) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g174 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g163 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g168 #:flat) (recursive-contract g86 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g166 #:flat) (recursive-contract g159 #:flat) (recursive-contract g153 #:flat)) #:flat))
  225 ms : line (->* ((or/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) (recursive-contract g220 #:flat))) #:flat)) (cons/c line (cons/c (recursive-contract (listof (recursive-contract g197 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g201 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g204 #:flat)) #:flat))) #:flat)))))
  177 ms : set-$ocm-min-entrys! (-> $ocm? (vectorof Any) any)
  170 ms : shifts (-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) (recursive-contract g220 #:flat))) #:flat)) any/c (listof (listof (or/c #f (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g201 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g204 #:flat)) #:flat))) #:flat)))))
  317/2 ms : word-string (-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) (recursive-contract g220 #:flat))) #:flat) String)
  153 ms : $ocm-min-entrys (-> $ocm? (vectorof Any))
  203/2 ms : quad->string (-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) (recursive-contract g220 #:flat))) #:flat) String)
  173/2 ms : wrap-best (->* ((listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g456 #:flat) (recursive-contract g462 #:flat))) #:flat))) (Float) (listof (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g449 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g449 #:flat)) #:flat) (recursive-contract g464 #:flat))) #:flat))))))
  147/2 ms : quad-attrs (-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) (recursive-contract g220 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g197 #:flat)) #:flat))
  139/2 ms : quad-attr-ref (->* ((or/c (recursive-contract (listof (recursive-contract g538 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g472 #:flat) (recursive-contract g544 #:flat))) #:flat)) any/c) ((recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract (listof (recursive-contract g538 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g535 #:flat)) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g472 #:flat) (recursive-contract g544 #:flat))) #:flat)) #:flat)) (recursive-contract (or/c #f #t Symbol String 0 1 Byte-Larger-Than-One Positive-Index-Not-Byte Positive-Fixnum-Not-Index Negative-Fixnum Positive-Integer-Not-Fixnum Negative-Integer-Not-Fixnum Float-Nan Float-Positive-Zero Float-Negative-Zero Positive-Float-No-NaN Negative-Float-No-NaN (recursive-contract g470 #:flat) (recursive-contract g542 #:flat) (recursive-contract g548 #:flat)) #:flat))
  62 ms : split-quad (-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g265 #:flat) (recursive-contract g270 #:flat))) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g267 #:flat) (recursive-contract g271 #:flat))) #:flat)))
  123/2 ms : insert-spacers-in-line (->* ((cons/c line (cons/c (recursive-contract (listof (recursive-contract g447 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g456 #:flat) (recursive-contract g462 #:flat))) #:flat))))) ((or/c #f Symbol)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g449 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g449 #:flat)) #:flat) (recursive-contract g464 #:flat))) #:flat)))))
  60 ms : quad-name (-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g472 #:flat) (recursive-contract g544 #:flat))) #:flat) Symbol)
  97/2 ms : quads->line (-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) (recursive-contract g220 #:flat))) #:flat)) (cons/c line (cons/c (recursive-contract (listof (recursive-contract g197 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g201 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g204 #:flat)) #:flat))) #:flat)))))
  40 ms : add-horiz-positions (-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g447 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g456 #:flat) (recursive-contract g462 #:flat))) #:flat)))) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g449 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g449 #:flat)) #:flat) (recursive-contract g464 #:flat))) #:flat)))))
  63/2 ms : make-ocm (->* ((-> Natural Natural Any) (-> any/c any)) (Any) $ocm?)
  30 ms : word-break (->* ((or/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (or/c String (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) (recursive-contract g220 #:flat))) #:flat)) #:flat)) (cons/c word-break (cons/c (recursive-contract (listof (recursive-contract g197 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g202 #:flat)) #:flat))))
  30 ms : join-quads (-> (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g265 #:flat) (recursive-contract g270 #:flat))) #:flat)) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g267 #:flat) (recursive-contract g271 #:flat))) #:flat)))
  30 ms : $ocm-matrix-proc (-> $ocm? (-> Natural Natural Any))
  20 ms : add-vert-positions (-> (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g257 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g265 #:flat) (recursive-contract g270 #:flat))) #:flat)))) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g260 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g267 #:flat) (recursive-contract g271 #:flat))) #:flat)))))
  20 ms : group-quad-list (-> (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g174 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g168 #:flat) (recursive-contract g86 #:flat))) #:flat)))) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g166 #:flat) (recursive-contract g159 #:flat))) #:flat)))
  20 ms : fill (->* ((cons/c line (cons/c (recursive-contract (listof (recursive-contract g447 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract g456 #:flat) (recursive-contract g462 #:flat))) #:flat))))) ((or/c Float #f)) (cons/c any/c (cons/c (recursive-contract (listof (recursive-contract g449 #:flat)) #:flat) (listof (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g449 #:flat)) #:flat) (recursive-contract g464 #:flat))) #:flat)))))
  20 ms : quad-attr-set* (-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g265 #:flat) (recursive-contract g270 #:flat))) #:flat) (recursive-contract (or/c () (cons/c Symbol (cons/c any/c g11115341))) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g267 #:flat) (recursive-contract g271 #:flat))) #:flat))
  20 ms : quad-list (-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) (recursive-contract g220 #:flat))) #:flat) (recursive-contract (listof (recursive-contract g202 #:flat)) #:flat))
  20 ms : round-float (-> any/c Float)
  37/2 ms : $penalty3 (-> any/c any/c $penalty?)
  12 ms : compute-line-height (-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract g265 #:flat) (recursive-contract g270 #:flat))) #:flat) (recursive-contract (cons/c Symbol (cons/c (recursive-contract g267 #:flat) (recursive-contract g271 #:flat))) #:flat))
  23/2 ms : #<procedure:$penalty->value> (-> Any Float)
  10 ms : find-color (->m string? (or/c (is-a?/c color%) #f))
  10 ms : pdf-renderer% g636
  10 ms : make-quadattrs (-> (listof Any) (recursive-contract (listof (recursive-contract g172 #:flat)) #:flat))
  10 ms : quad-name (-> (recursive-contract (cons/c Symbol (cons/c (recursive-contract (listof (recursive-contract g199 #:flat)) #:flat) (recursive-contract g220 #:flat))) #:flat) Symbol)
  10 ms : word (->* ((or/c (recursive-contract (listof (recursive-contract g174 #:flat)) #:flat) any/c)) #:rest (listof (recursive-contract (or/c String (recursive-contract (cons/c Symbol (cons/c (recursive-contract g168 #:flat) (recursive-contract g86 #:flat))) #:flat)) #:flat)) (cons/c word (cons/c (recursive-contract (listof (recursive-contract g172 #:flat)) #:flat) (recursive-contract (listof (recursive-contract g162 #:flat)) #:flat))))
  10 ms : ocm-min-entry (-> any/c any/c any/c)
  10 ms : $ocm (-> (vectorof Any) (vectorof (or/c Natural Symbol)) Natural (-> any/c any/c any/c) (-> Any Float) Natural Natural any)
  10 ms : hyphenate-quad (-> (recursive-contract (or/c String (recursive-contract g333 #:flat)) #:flat) (recursive-contract (or/c String (recursive-contract (cons/c Symbol (cons/c (recursive-contract g267 #:flat) (recursive-contract g271 #:flat))) #:flat)) #:flat))
  10 ms : ocm-min-index (-> any/c any/c (or/c Natural Symbol))
  10 ms : slicef-after (parametric->/c (A347) (->* ((listof A347) (->* (A347) () any)) () (values (listof (listof A347)))))
